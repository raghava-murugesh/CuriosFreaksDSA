1. Sum of Array -> https://www.geeksforgeeks.org/problems/sum-of-array2326/1
Solution :
class Solution:
	def arraySum(self, arr):
   		# code here
   		return sum(arr)

--------------------------------------------------------------------------------------------

2. Count odd and even numbers in arr -> https://www.geeksforgeeks.org/problems/count-odd-even/1
Solution:
class Solution:
	def countOddEven(self, arr):
	    even = 0
	    odd = 0
	    for i in arr:
	        if i%2==0:
	            even += 1
	        else:
	            odd += 1
	       
	    return (odd,even)

--------------------------------------------------------------------------------------------

3. Larhest num in arr -> https://www.geeksforgeeks.org/problems/largest-element-in-array4009/1

Solution :
class Solution:
    def largest(self, arr):
        large = arr[0]
        for i in arr:
            if large < i:
                large = i
        return large

--------------------------------------------------------------------------------------------------------------------

4. Smallest Number and second smallest number -> https://www.geeksforgeeks.org/problems/find-the-smallest-and-second-smallest-element-in-an-array3226/1

Solution :
class Solution:
    def minAnd2ndMin(self, arr):
        if len(arr) < 2:  # Handle cases where there aren't enough elements
            return [-1, -1]  # Not enough elements
        
        Small, secondSmall = float('inf'), float('inf')

        for i in arr:
            if i < Small:  # Found a new smallest number
                secondSmall = Small  # Update second smallest
                Small = i  # Update smallest
            elif Small < i < secondSmall:  # Found a new second smallest
                secondSmall = i

        if secondSmall == float('inf'):  # If no valid second smallest found
            return [-1, -1]

        return [Small, secondSmall]  # Return both values

-----------------------------------------------------------------------------------------------------------------------

5. Min and Max num in arr -> https://www.geeksforgeeks.org/problems/find-minimum-and-maximum-element-in-an-array4428/1

Solution:
class Solution:
    def get_min_max(self, arr):
        maximum = arr[0]
        minimum = arr[0]
        for i in arr:
            if maximum < i:
                maximum = i
            elif minimum > i:
                minimum = i
                
        return (minimum, maximum)

-----------------------------------------------------------------------------------------------------------------------

6. Print an array in Pendulum Arrangement -> https://www.geeksforgeeks.org/problems/print-an-array-in-pendulum-arrangement4004/1

Solutiom:

class Solution:
    def pendulumArrangement(self, arr):
        arr.sort()
        result = [0] * len(arr)
        mid = (len(arr) - 1) // 2
        left, right = mid, mid + 1

        for i in range(len(arr)):
            if i % 2 == 0:
                result[left] = arr[i]
                left -= 1
            else:
                result[right] = arr[i]
                right += 1

        return result

-----------------------------------------------------------------------------------------------------------------------

7. Alternates in an Array -> https://www.geeksforgeeks.org/problems/print-alternate-elements-of-an-array/1

Solution :
class Solution:
    def getAlternates(self, arr):
        # Code Here
        Output = []
        for i in range(0, len(arr), 2):
            Output.append(arr[i])
        return Output

-----------------------------------------------------------------------------------------------------------------------

8. Array Search -> https://www.geeksforgeeks.org/problems/search-an-element-in-an-array-1587115621/1

Solution:
class Solution:
    #Complete the below function
    def search(self,arr, x):
        for i in range(len(arr)):
            if arr[i] == x:
                return i
        return -1

-----------------------------------------------------------------------------------------------------------------------

9. Sorted Array -> https://www.geeksforgeeks.org/problems/who-will-win-1587115621/1

Solution : (Optimal)
class Solution:
    def searchInSorted(self,arr, k):
        return k in arr

Solution : Binary Search 
import bisect

class Solution:
    def searchInSorted(self, arr, k):
        index = bisect.bisect_left(arr, k)  # Find insertion point
        return index < len(arr) and arr[index] == k  # Check if k is present

-----------------------------------------------------------------------------------------------------------------------

10. Find element at a given Index -> https://www.geeksforgeeks.org/problems/c-array-print-an-element-set-25933/0

Solution : (Optimal)
from typing import List


class Solution:

    def findElementAtIndex(self, key: int, arr: List[int]) -> int:
        return arr[key]

-----------------------------------------------------------------------------------------------------------------------

11. Palindrome Array -> https://www.geeksforgeeks.org/problems/perfect-arrays4645/1

Solution : 
from typing import List

class Solution:
    def isPerfect(self, arr : List[int]) -> bool:
        return arr == arr[::-1]

-----------------------------------------------------------------------------------------------------------------------

12. Smaller and Larger -> https://www.geeksforgeeks.org/problems/smaller-and-larger4005/1

Solution :
class Solution:
    def getMoreAndLess(self, arr: list[int], target: int) ->list[int]:
		large_array = 0
		small_array = 0
		for i in arr:
		    if target <= i:
		        large_array += 1
		    if (target >= i):
		        small_array += 1
		        
		return [small_array, large_array]

-----------------------------------------------------------------------------------------------------------------------

13. Max and Min Product from 2 Arrays -> https://www.geeksforgeeks.org/problems/product-of-maximum-in-first-array-and-minimum-in-second3943/0

Solution :
class Solution:
    # Function to find the maximum element from array arr1 and 
    # the minimum element from array arr2 and return their product.
    def find_multiplication(self, arr1, arr2):
        maximum_element = float ('-inf')
        minimum_element = float ('inf')
        for i in arr1:
            if i > maximum_element:
                maximum_element = i
        for i in arr2:
            if i < minimum_element:
                minimum_element = i
                
        return maximum_element * minimum_element

-----------------------------------------------------------------------------------------------------------------------

14. Sieve of Eratosthenes -> https://www.geeksforgeeks.org/problems/sieve-of-eratosthenes5242/1

Solution :
class Solution:
    def sieveOfEratosthenes(self, n):
        is_Prime = [True] * (n+1)
        is_Prime[0] = is_Prime[1] = False
        
        for i in range (2, int(n**0.5)+1):
            if is_Prime[i]:
                for j in range(i * i, n + 1, i):
                    is_Prime[j] = False
                    
        prime = [i for i in range(2, n+1) if is_Prime[i]]
        return prime

-----------------------------------------------------------------------------------------------------------------------------------

15. Given a range [L, R]. The task is to find the sum of all the prime numbers in the given range from L to R both inclusive.
Examples:  

Input : L = 10, R = 20
Output : Sum = 60
Prime numbers between [10, 20] are:
11, 13, 17, 19
Therefore, sum = 11 + 13 + 17 + 19 = 60
Input : L = 15, R = 25
Output : Sum = 59

Note: Use sieve of eratosthenes to solve the problem


Solution :
L = int(input("Enter a Number : "))
R = int(input("Enter a Number : "))
is_Prime = [True] * (R+1)
is_Prime[0] = is_Prime[1] = False  // no need of this if you give L more than 2 //

for i in range (2, int(R**0.5)+1):
    if is_Prime[i]:
        for j in range (i*i, R+1, i):
            is_Prime[j] = False
            
Prime = [i for i in range(L, R+1) if is_Prime[i]]
sum_of_Prime = sum(Prime)
print(Prime)
print(sum_of_Prime)

-----------------------------------------------------------------------------------------------------------------------

