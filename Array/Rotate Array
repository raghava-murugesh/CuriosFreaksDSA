Geeks for Geeks Problem -> https://www.geeksforgeeks.org/problems/cyclically-rotate-an-array-by-one2614/1
Rotate Array by One 

Solution :
class Solution:
    def rotate(self, arr):
        temp = arr[-1]  # Save the last element

        # Shift elements right by one position
        for i in range(len(arr) - 1, 0, -1):
            arr[i] = arr[i - 1]

        arr[0] = temp  # Put the last element in front
        return arr


=======================================================================================================================================

Leetcode Problem -> https://leetcode.com/problems/rotate-array/description/
Rotate Array 

Solution :
class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        n = len(nums)
        k = k%n

        def reverse (start, end):
            while start < end:
                nums[start], nums[end] = nums[end], nums[start]
                start += 1
                end -= 1

        reverse (0, n-1)
        reverse (0, k-1)
        reverse (k, n-1)

=======================================================================================================================================

Geeks for Geeks problem -> https://www.geeksforgeeks.org/problems/rotation4723/0
Kth Rotation

Solution:
class Solution:
    def findKRotation(self, arr):
        # code here
        n = len(arr)
        low = 0
        high = n-1
        
        while low <= high:
            if arr[low] <= arr[high]:
                return low
                
            mid = low + (high - low) // 2
            next = (mid + 1) % n
            prev = (mid - 1 + n) % n
            
            if arr[mid] <= arr[next] and arr[mid] <= arr[prev]:
                return mid
                
            if arr[mid] <= arr[high]:
                high = mid - 1 
            else:
                low = mid + 1
                
        return 0

=======================================================================================================================================
